<acsconfig xmlns="http://openncip.org/acs-config/1.0/">

	<error-detect enabled="true" />

  <!-- Set Net::Server::PreFork runtime parameters -->
	<!--  <server-params
           min_servers='1'
           min_spare_servers='0' /> -->
  
  
	<listeners>
		<service
			port="0:8080/tcp"
			transport="http"
			protocol="NCIP/1.0" />

		<service
			port="8023/tcp"
			transport="telnet"
			protocol="SIP/1.00"
			timeout="60" />

		<service
			port="127.0.0.1:6001/tcp"
			transport="RAW" 
			protocol="SIP/2.00"
			timeout="60" />
	</listeners>

	<accounts>
		<login id="scclient" password="clientpwd" institution="gapines"/>
	</accounts>

	<!-- Institution tags will hold stuff used to interface to -->
	<!-- the rest of the ILS: authentication parameters, etc.  I -->
	<!-- don't know what yet, so it'll just be blank.  But there -->
	<!-- needs to be one institution stanza for each institution -->
	<!-- named in the accounts above. -->
	<institutions>


		<institution id="gapines" implementation="OpenILS::SIP">

			<!-- This defines what actions we want to allow 
				remote clients (self-check machines) to perform -->
			<policy 
				checkin="true" 
				checkout="true" 
				renewal="true" 
				status_update="false" 
				offline="false" 
				timeout="600" 
				retries="3"/>
	
			<!-- implementation specific config options go here -->
			<implementation_config>
				<bootstrap>SYSCONFDIR/opensrf_core.xml</bootstrap>
				<currency>USD</currency>

				<!-- The default encoding defined in the SIP specification is -->
				<!-- ASCII, which isn't great for French, Spanish, Armenian. -->
				<!-- You can specify a different encoding here, based on the -->
				<!-- encodings supported by your SIP client and your Encode -->
				<!-- module; run the following command to get a list of supported -->
				<!-- encodings: -->
				<!--   perl -MEncode -le "print for Encode->encodings(':all')" -->

				<!-- UTF-8 is the recommended encoding if your SIP client supports it -->
				<encoding>ascii</encoding>

				<!-- These defines what this SIP code has the ability to support -->
				<supports>
					<item name='magnetic media' value='true'/>
					<item name='security inhibit' value='false'/>
					<item name='offline operation' value='false'/>
					<item name='patron status request' value='true'/>
					<item name='checkout' value='true'/>
					<item name='checkin' value='true'/>
					<item name='block patron' value='true'/>
					<item name='acs status' value='true'/>
					<item name='login' value='true'/>
					<item name='patron information' value='true'/>
					<item name='end patron session' value='true'/>
					<item name='fee paid' value='true'/>
					<item name='item information' value='true'/>
					<item name='item status update' value='false'/>
					<item name='patron enable' value='false'/>
					<item name='hold' value='false'/>
					<item name='renew' value='true'/>
					<item name='renew all' value='false'/>
				</supports>
				<options>
					<!-- msg64, the patron information request can be
					  made to return item barcodes by setting
					  the option 'msg64_summary_datatype' to 'barcode'
					  as below. Any other value, or no value at all
					  will cause OpenILS::SIP to return the title
					  in response to a message 64 request, which was the
					  default behaviour in previous versions of Evergreen.
					-->
					<option name='msg64_summary_datatype' value='barcode' />
					<!--
						If enabled, the PC field in patron-info requests will return the non-translated profile name
					<option name='patron_type_uses_code' value='true' />
					-->
				</options>

                <checkin_override>
                    <event>COPY_ALERT_MESSAGE</event>
                    <event>COPY_BAD_STATUS</event>
                    <event>COPY_STATUS_MISSING</event>
                    <!--
                    <event>COPY_STATUS_LOST</event>
                    -->
                </checkin_override>

                <checkout_override>
                    <event>COPY_ALERT_MESSAGE</event>
                </checkout_override>

                <!-- If uncommented, SIP2 checkins will capture local holds as transits, instead of marking as ready for pickup. -->
                <!--
                <checkin_hold_as_transit>1</checkin_hold_as_transit>
                -->

                <!-- If uncommented, overrides the legacy_script_support value in opensrf.xml for SIP. -->
                <!--
                <legacy_script_support>false</legacy_script_support>
                -->

				<scripts>
                    <!-- 
                        When legacy script support is disabled, the <script> configuration
                        is ignored.  The SIP server pulls item configuration information
                        from the database instead (config.circ_modifier).
                    -->
					<path>LOCALSTATEDIR/</path>
                    <path>LOCALSTATEDIR/catalog/</path>
		    <path>LIBDIR/javascript/</path>
					<item_config>circ/circ_item_config.js</item_config>
				</scripts>

			</implementation_config>
	
		</institution>
	
	</institutions>
</acsconfig>

<!--
    vim:noet:ts=4:sw=4:
-->
