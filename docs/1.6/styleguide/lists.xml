<?xml version='1.0' encoding='UTF-8'?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:id="lists">
  <title>Lists</title>
  <info>
    <abstract>
      <para>DocBook has several list structures to choose from. It has the standard numbered lists
        and bulleted lists. In addition it provides specialized types of lists for glossaries and
        other occasions. All of these lists may be used in Evergreen documentation. </para>
    </abstract>
  </info>
  <section>
    <title>Simple Lists</title>
    <simplesect>
      <title>Overview</title>
      <para>Simple lists are like a grocery list. They are a simple list of words or phrases without
        any delimiter. Their elements can only consist of simple, in-line tags, and therefore cannot
        contain sublists, examples, code listings or multiple paragraphs. Simple lists are rarely
        used in Evergreen' documentation.</para>
    </simplesect>
    <simplesect>
      <title>Specifying a simple list</title>
      <para>A simple list is specified by a <tag class="element">simplelist</tag> element. <tag
          class="element">simplelist</tag> has two optional attributes:</para>
      <table pgwide="1">
        <title>Attributes of the <tag class="element">simplelist</tag> Element</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Values</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <tag class="attribute">type</tag>
              </entry>
              <entry><tag class="attvalue">inline</tag>, <tag class="attvalue">horiz</tag>, <tag
                  class="attvalue">vert</tag> (default)</entry>
              <entry>Specifies how the items in the list are to be listed.</entry>
            </row>
            <row>
              <entry>
                <tag class="attribute">columns</tag>
              </entry>
              <entry>&gt;=1</entry>
              <entry>Specifies the number of columns to use when <tag class="attribute">type</tag>
                is set to <tag class="attvalue">horiz</tag> or <tag class="attvalue"
                >vert</tag>.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>The elements of a simple list are specified using a <tag class="element">member</tag>
        element. The contents of each <tag class="element">member</tag> element can only contain
        character data and in-line elements.</para>
    </simplesect>
    <simplesect>
      <title>Example</title>
      <para><xref linkend="simpmarkup"/> shows the markup for a simple list.</para>
      <example xml:id="simpmarkup" xreflabel="Example 1">
        <title>Simple List Markup</title>
        <programlisting>&lt;simplelist&gt;
  &lt;member&gt;Swedish Fish&lt;/member&gt;
  &lt;member&gt;Mike &amp; Ike&lt;/member&gt;
  &lt;member&gt;Sour Patch Kids&lt;/member&gt;
  &lt;member&gt;Gummy Bears&lt;/member&gt;
&lt;/simplelist&gt;</programlisting>
      </example>
    </simplesect>
  </section>
  <section>
    <title>Itemized Lists</title>
    <simplesect>
      <title>Overview</title>
      <para>An itemized list is used for lists where the order of the items in the list does not
        matter. They are like bulleted lists or the lists that are created by the <tag
          class="element">ul</tag> tag in HTML.</para>
    </simplesect>
    <simplesect>
      <title>Specifying an itemized list</title>
      <para>An itemized list is specified by an <tag class="element">itemizedlist</tag> element. You
        can specify an <tag class="attribute">xml:id</tag> attribute for itemized lists. If the list
        is going to referenced by an <tag class="element">xref</tag> element, you should also
        specify a value for the <tag class="attribute">xreflabel</tag> attribute.</para>
      <para>Each item in an itemized list is specified by a <tag class="element">listitem</tag>
        element. The <tag class="element">listitem</tag> element is a wrapper element and can
        contain any container elements such as a <tag class="element">para</tag> element. All
        content within a <tag class="element">listitem</tag> element will be indented to the same
        level. You can also specify sub-lists within a <tag class="element">listitem</tag>
        element.</para>
    </simplesect>
    <simplesect>
      <title>Example</title>
      <para><xref linkend="itemmarkup"/> shows the markup for an itemized list.</para>
      <example xml:id="itemmarkup" xreflabel="Example 2">
        <title>Itemized List Markup</title>
        <programlisting>&lt;itemizedlist&gt;
  &lt;listitem&gt;
    &lt;para&gt;This is the first item in my list&lt;/para&gt;
  &lt;/listitem&gt;
  &lt;listitem&gt;
    &lt;para&gt;This is the second item in my list.&lt;/para&gt;
    &lt;para&gt;It has two paragraphs.&lt;/para&gt;
  &lt;/listitem&gt;
  &lt;listitem&gt;
    &lt;para&gt;This item has a sublist.&lt;/para&gt;
    &lt;itemizedlist&gt;
      &lt;listitem&gt;&lt;para&gt;first&lt;/para&gt;&lt;/listitem&gt;
      &lt;listitem&gt;&lt;para&gt;second&lt;/para&gt;&lt;/listitem&gt;
    &lt;/itemizedlist&gt;
  &lt;/listitem&gt;
&lt;/itemizedlist&gt;</programlisting>
      </example>
    </simplesect>
  </section>
  <section>
    <title>Ordered List</title>
    <simplesect>
      <title>Overview</title>
      <para>An ordered list is a list where the order of the elements is important and made
        explicit. They are like numbered lists and lists that are created using the <tag
          class="element">ol</tag> tag in HTML.</para>
    </simplesect>
    <simplesect>
      <title>Specifying an ordered list</title>
      <para>Ordered lists are specified by an <tag class="element">orderedlist</tag> element. In
        addition to the <tag class="attribute">xml:id</tag> attribute and <tag class="attribute"
          >xreflabel</tag> attribute, <tag class="element">orderedlist</tag> elements have three
        optional elements.</para>
      <table pgwide="1">
        <title>Attributes of the <tag class="element">orderedlist</tag> Element</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Attribute</entry>
              <entry>Values</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>
                <tag class="attribute">continuation</tag>
              </entry>
              <entry><tag class="attvalue">continues</tag>, <tag class="attvalue">restarts</tag>
                (default)</entry>
              <entry>Specifies whether the item numbering should restart at one or continue from the
                previous ordered list.</entry>
            </row>
            <row>
              <entry>
                <tag class="attribute">inheritnum</tag>
              </entry>
              <entry><tag class="attvalue">inherit</tag>, <tag class="attvalue">ignore</tag>
                (default)</entry>
              <entry>Valid only for nested lists. Specifies whether the items in the nested list
                contain a reference to the item of the parent list.</entry>
            </row>
            <row>
              <entry>
                <tag class="attribute">numeration</tag>
              </entry>
              <entry><tag class="attvalue">arabic</tag>, <tag class="attvalue">loweralpha</tag>,
                  <tag class="attvalue">lowerroman</tag>, <tag class="attvalue">upperalpha</tag>,
                  <tag class="attvalue">upperroman</tag></entry>
              <entry>Specifies the numbering style to use for the list.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>Items in an ordered list are specified using a <tag class="element">listitem</tag>
        element. The <tag class="element">listitem</tag> element is a wrapper element and can
        contain any container elements such as a <tag class="element">para</tag> element. All
        content within a <tag class="element">listitem</tag> element will be indented to the same
        level. You can also specify sub-lists within a <tag class="element">listitem</tag>
        element.</para>
    </simplesect>
  </section>
  <section xml:id="VariableLists">
    <title>Variable Lists</title>
    <simplesect>
      <title>Overview</title>
      <para>A variable list looks similar to a glossary. It consists of a word, or phrase, and some
        text describing the word, or phrase. <xref linkend="varexample"
          xrefstyle="select: title nopage"/> shows a variable list.</para>
      <variablelist xml:id="varexample">
        <title>List of Rooms</title>
        <varlistentry>
          <term>Kitchen</term>
          <listitem>
            <para>The room where food is stored and prepared.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Garage</term>
          <listitem>
            <para>Where the cars are parked.</para>
            <note>
              <para>Bikes are also here.</para>
            </note>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Living room</term>
          <term>Family room</term>
          <listitem>
            <para>This is where we watch TV.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </simplesect>
    <simplesect>
      <title>Specifying the list</title>
      <para>Variable lists are specified by a <tag class="element">variablelist</tag> element. The
          <tag class="element">variablelist</tag> element can have the optional <tag
          class="attribute">xml:id</tag> attribute and <tag class="attribute">xreflabel</tag>
        attribute specified. You can also supply a title for a variable list by adding a <tag
          class="element">title</tag> element as the <tag class="element">variablelist</tag>
        element's first child.</para>
      <para>The items in a variable list are specified using a <tag class="element"
          >varlistentry</tag> element. The <tag class="element">varlistentry</tag> element has two
        children elements that specify the contents of the item:</para>
      <itemizedlist>
        <listitem>
          <para><tag class="element">term</tag></para>
        </listitem>
        <listitem>
          <para><tag class="element">listitem</tag></para>
        </listitem>
      </itemizedlist>
    </simplesect>
    <simplesect>
      <title>Specifying terms</title>
      <para>You can specify one or more <tag class="element">term</tag> elements in a <tag
          class="element">varlistentry</tag> element. Each <tag class="element">term</tag> element
        can contain text and in-line markup elements. Each <tag class="element">term</tag> element
        should contain a single term or phrase that the list item describes.</para>
    </simplesect>
    <simplesect>
      <title>Describing a term</title>
      <para>You describe the term, or terms, defined by the <tag class="element">term</tag> elements
        using a single <tag class="element">listitem</tag> element. The <tag class="element"
          >listitem</tag> element is a wrapper element and can contain any container elements such
        as a <tag class="element">para</tag> element. All content within a <tag class="element"
          >listitem</tag> element will be indented to the same level. You can also specify sub-lists
        within a <tag class="element">listitem</tag> element.</para>
    </simplesect>
    <simplesect>
      <title>Example</title>
      <para><xref linkend="varmarkup"/> shows the markup representing <xref linkend="varexample"
        />.</para>
      <example xml:id="varmarkup">
        <title>Variable List Markup</title>
        <programlisting>&lt;variablelist xml:id="varexample"&gt;
  &lt;title&gt;List of Rooms&lt;/title&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Kitchen&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;The room where food is stored and prepared.&lt;/para&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Garage&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;Where the cars are parked.&lt;/para&gt;
      &lt;note&gt;
        &lt;para&gt;Bikes are also here.&lt;/para&gt;
      &lt;/note&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
  &lt;varlistentry&gt;
    &lt;term&gt;Living room&lt;/term&gt;
    &lt;term&gt;Family room&lt;/term&gt;
    &lt;listitem&gt;
      &lt;para&gt;This is where we watch TV.&lt;/para&gt;
    &lt;/listitem&gt;
  &lt;/varlistentry&gt;
&lt;/variablelist&gt;</programlisting>
      </example>
    </simplesect>
  </section>
  <section xml:id="GlossList">
    <title>Glossary Lists</title>
    <simplesect>
      <title>Overview</title>
      <para>A glossary list is a special case of a variable list. It is used specifically for lists
        that define terms and where you may want to refer the reader back to the definition of a
        specific term. <xref linkend="glossexample" xrefstyle="select: nopage label"/> shows a use
        of a glossary list.</para>
      <glosslist xml:id="glossexample" xreflabel="List of Terms">
        <title>List of Terms</title>
        <glossentry xml:id="consumerdef">
          <glossterm>consumer</glossterm>
          <glossdef>
            <para>The end user of a service, also called a client for that service.</para>
          </glossdef></glossentry>
        <glossentry xml:id="endptdef">
          <glossterm>endpoint</glossterm>
          <glossdef>
            <para>The point of contact that a <glossterm linkend="servicedef">service</glossterm>
              provides for its <glossterm linkend="consumerdef">consumers</glossterm>.</para>
          </glossdef></glossentry>
        <glossentry xml:id="servicedef">
          <glossterm>service</glossterm>
          <glossdef>
            <para>A collection of operations that perform a useful set of functions in a network,
              access to which is implemented as an <glossterm linkend="endptdef"
                >endpoint</glossterm>. In a service-oriented network, services are defined by a
              service contract.</para>
          </glossdef></glossentry>
        <glossentry>
          <glossterm>service consumer</glossterm>
          <glosssee otherterm="consumerdef"/></glossentry>
      </glosslist>
    </simplesect>
    <simplesect>
      <title>Specifying the list</title>
      <para>A glossary list is specified using the <tag class="element">glosslist</tag> element. If
        you want to refer back to a glossary list, you can provide values for the <tag
          class="attribute">xml:id</tag> attribute and the <tag class="attribute">xreflabel</tag>
        attribute. Like variable lists, glossary lists can have titles.</para>
      <para>The entries in a glossary list are specified using a <tag class="element"
          >glossentry</tag> element. The <tag class="element">glossentry</tag> element typically has
        two children: <tag class="element">glossterm</tag> and <tag class="element">glossdef</tag>.
        You can also use the <tag class="element">glosssee</tag> element to xref with other
        definitions.</para>
    </simplesect>
    <simplesect>
      <title>Specifying a term</title>
      <para>A <tag class="element">glossentry</tag> element can have only one <tag class="element"
          >glossterm</tag> element. This element specifies the term being defined by this entry. If
        you are going to refer back to this term, you can supply a value for the parent <tag
          class="element">glossentry</tag> element's <tag class="attribute">xml:id</tag>
        attribute.</para>
      <note>
        <para>The <tag class="element">glossterm</tag> element can also be used in text entries to
          refer to terms defined in a glossary entry. When used in this manner, you supply a value
          for the <tag class="attribute">linkend</tag> attribute.</para>
      </note>
    </simplesect>
    <simplesect>
      <title>Defining a term</title>
      <para>You define a term using either one or more <tag class="element">glossdef</tag> elements
        or a <tag class="element">glosssee</tag> element. The <tag class="element">glossdef</tag>
        element is a content element that contains markup specifying a definition. If you use more
        than one <tag class="element">glossdef</tag> element, they are treated as separate
        definitions for the same term.</para>
      <para>The <tag class="element">glosssee</tag> element redirects the reader to a term with the
        same meaning. It acts like a &quot;See&quot; entry in a dictionary. It has one attribute,
          <tag class="attribute">otherterm</tag>, whose value is the id of the term to which the
        reader is redirected.</para>
    </simplesect>
    <simplesect>
      <title>Example</title>
      <para><xref linkend="glossmarkup"/> shows the markup for <xref linkend="glossexample"
          xrefstyle="select: nopage label"/>.</para>
      <example xml:id="glossmarkup" xreflabel="Example 4" pgwide="1">
        <?dbfo pgwide="1"?>
        <title>Glossary List Markup</title>
        <programlisting>&lt;glosslist xml:id="glossexample" xreflabel="List of terms";&gt;
  &lt;glossentry xml:id="consumerdef"&gt;
    &lt;glossterm&gt;consumer&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;The end user of a service, also called a 
         client for that service.&lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry xml:id="endptdef"&gt;
    &lt;glossterm&gt;endpoint&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;The point of contact that a 
         &lt;glossterm linkend=&quot;servicedef&quot;&gt;service&lt;/glossterm&gt; 
        provides for its 
        &lt;glossterm linkend=&quot;consumerdef&quot;&gt;consumers&lt;/glossterm&gt;.
    &lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry xml:id="servicedef"&gt;
    &lt;glossterm&gt;service&lt;/glossterm&gt;
    &lt;glossdef&gt;
      &lt;para&gt;A collection of operations that perform a 
        useful set of functions in a network, access to 
        which is implemented as an
        &lt;glossterm linkend=&quot;endptdef&quot;&gt;endpoint&lt;/glossterm&gt;.
        In a service-oriented network, services are defined          
        by a service contract.&lt;/para&gt;
    &lt;/glossdef&gt;
  &lt;/glossentry&gt;
  &lt;glossentry&gt;
    &lt;glossterm&gt;service consumer&lt;/glossterm&gt;
    &lt;glosssee otherterm=&quot;consumerdef&quot; /&gt;
  &lt;/glossentry&gt;
&lt;/glosslist&gt;</programlisting>
      </example>
    </simplesect>
  </section>
</chapter>
